name: Test Suite

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'testing-ui/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'testing-ui/**'

defaults:
  run:
    working-directory: testing-ui

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: testing-ui/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Run accessibility tests
      run: npm run test:a11y

    - name: Run all tests with coverage
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./testing-ui/coverage/lcov.info
        directory: ./testing-ui/coverage/
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: testing-ui/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:3001' }}
        NEXT_PUBLIC_APP_NAME: 'Flowise Converter'

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: testing-ui/.next/
        retention-days: 7

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t flowise-converter-frontend:latest .
        docker build -t flowise-converter-frontend:${{ github.sha }} .

    - name: Test Docker image
      run: |
        docker run --rm -d -p 3000:3000 --name test-container flowise-converter-frontend:latest
        sleep 30
        curl -f http://localhost:3000/api/health || exit 1
        docker stop test-container

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: testing-ui/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Run dependency check
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
      continue-on-error: true

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: testing-ui/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x

    - name: Run Lighthouse CI
      run: |
        npm run start &
        sleep 30
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-results
        path: .lighthouseci/
        retention-days: 7